.. _configuration:

========================
Первоначальная настройка
========================

.. todo::
   Первоначальная настройка

   | см. `1.6 Введение - Первоначальная настройка Git <https://git-scm.com/book/ru/v2/Введение-Первоначальная-настройка-Git>`_
   | см. `GitHub Help <https://help.github.com/articles/caching-your-github-password-in-git/>`_

Расположение конфигурационных файлов
------------------------------------

Прежде, чем перейти к непосредственному рассмотрению различных настроек Git давайте познакомимся с файлами конфигурации. В Git
существует три уровня конфигурации: системная конфигурация, глобальная (пользовательская) конфигурация и конфигурация, связанная с каждым Git-репозиторием.
Глобальная конфигурация по умолчанию отсутствует, а системная конфигурация по умолчанию может отличаться в зависимости от выбранного способа установки Git.
Поскольку Git является в первую очередь консольной программой (но не волнуйтесь, GUI-оболочка входит в стандартную поставку Git - она будет рассматриваться позже), нам понадобится открыть
терминал для взаимодействия с этой программой (в ОС Windows рекомендую воспользоваться программой Git Bash из комплекта поставки Git). Введите в терминале
команду :code:`git config --system -e`. Многие команды Git (также как и рассматриваемая команда) для взаимодействия с пользователем используют
текстовый редактор. По умолчанию используется текстовый редактор `Vim <https://vim.sourceforge.io/>`_.

.. code-block:: ini
  :caption: /mingw64/etc/gitconfig
  :name: mingw64-etc-gitconfig

  [http]
    sslCAInfo = C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
  [diff "astextplain"]
    textconv = astextplain
  [filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    required = true
    process = git-lfs filter-process
  [credential]
    helper = manager

Для выхода из текстового редактора Vim последовательно нажмите: :code:`ESC Shift-Z Shift-Q`. Поскольку при работе с Git вам понадобится часто редактировать текстовые
файлы (например для задания текста сообщения при коммитах, слияниях и перебазированииях), разумно настроить для этой цели привычный вам текстовый редактор (в данном
руководстве будет использован `Notepad++ <https://notepad-plus-plus.org/>`_, но возможно использовать любой текстовый редактор). Чтобы сделать Notepad++ редактором по умолчанию
при работе с Git выполните команду :code:`git config --global core.editor "'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin"`.
После этого повторно выполните команду :code:`git config --system -e`. Если вы все сделали правильно, то системная конфигурация Git откроется в Notepad++.

